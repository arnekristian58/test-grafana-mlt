version: '3.9'

services:
  # Grafana agent batches and processes traces sent to it, generating metrics
  # and auto-logs from those traces.
  agent:
    image: grafana/agent:latest
    ports:
      - "12347:12345"
      - "12348:12348"
      - "6832:6832"
      - "55679:55679"
    volumes:
      - "./agent/config.yaml:/etc/agent/agent.yaml"
    command: [
      "-config.file=/etc/agent/agent.yaml",
      "-server.http.address=0.0.0.0:12345",
    ]

  tester:
    build:
      context: ./source/tester
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./source/tester/src:/app/src
      - ./source/tester/nodemon.json:/app/nodemon.json
      - /app/node_modules
    container_name: tester
    expose:
      - '4001'
    ports:
      - '4001:4001'
    command: npm run dev

  api-server:
    build:
      context: ./source/api-server
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./source/api-server/src:/app/src
      - ./source/api-server/nodemon.json:/app/nodemon.json
      - /app/node_modules
    container_name: api-server
    expose:
      - '4000'
    ports:
      - '4000:4000'
    environment:
      - NAMESPACE=production
      - LOGS_TARGET=http://loki:3100/loki/api/v1/push
      - TRACING_COLLECTOR_HOST=agent
      - TRACING_COLLECTOR_PORT=4317   
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_RESOURCE_ATTRIBUTES=ip=1.2.3.5   
    command: npm run dev    

  cos-server:
    build:
      context: ./source/cos-server
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./source/cos-server/src:/app/src
      - ./source/cos-server/nodemon.json:/app/nodemon.json
      - /app/node_modules
    container_name: cos-server
    expose:
      - '4002'
    ports:
      - '4002:4002'
    command: npm run dev   


  # The Grafana dashboarding server.
  grafana:
    image: grafana/grafana:main
    volumes:
      - "./grafana/definitions:/var/lib/grafana/dashboards"
      - "./grafana/provisioning:/etc/grafana/provisioning"
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=tempoApmTable traceqlEditor flameGraph topnav
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true

    
  # The Loki service stores logs sent to it, and takes queries from Grafana
  # to visualise those logs.
  loki:
    image: grafana/loki
    ports:
      - "3100:3100" 
    volumes:
      - "./loki/loki.yaml:/etc/mimir.yaml"           

  mimir:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    ports:
      - "9009:9009"
    volumes:
      - "./mimir/mimir.yaml:/etc/mimir.yaml"     

  minio:
    image: minio/minio
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
    environment:
      - MINIO_ROOT_USER=mimir
      - MINIO_ROOT_PASSWORD=supersecret   
    ports:
      - "9000:9000"       
      - "9001:9001"      
    volumes:
      - minio-storage:/data  
    command: minio server --console-address ":9001" /data && MINIO_PROMETHEUS_AUTH_TYPE="public" minio server ~/test          

volumes:
  grafana-data: 
  minio-storage: {}